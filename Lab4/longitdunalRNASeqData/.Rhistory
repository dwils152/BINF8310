for ( i in 1:length(exams) ) {
print(i)
}
for ( i in exams ) {
print(i)
}
readFasta()
library(ShortRead)
example(readFasta)
setwd("~/Desktop/spring2022/adv_stats")
setwd("~/Desktop/spring2022/adv_stats/sandbox")
add <- function(x, y) { return x + y}
add <- function(x, y) { return (x + y)}
add(4, 5)
get_seq <- function()
{}
get_seq <- function() {}
get_seq <- function() {
seq <- "Sequence1";
get_seq <- function ()
{
aSeq <- list()
aSeq$dnastring <- "actagat";
return (aSeq)
}
a <- get_seq()
a$dnastring
typeof(a)
type(a$dnastring)
dunif?
?dunif
x <- c(1, 2, 3, 4)
dunif(x)
hist(runif(100000000), breaks=20)
num_rolls <- 1000
rolls <- vector( length=num_rolls, mode="double")
?vector
for( i in 1:num_rolls) { rolls[i] <- sample(1:6,1)}
mean(rolls)
trial_sizes=seq(5,100000, by=5)
means <- vectort(mode='double', length=lengh(trial_sizes))
means <- vector(mode='double', length=lengh(trial_sizes))
means <- vector(mode='double', length=length(trial_sizes))
for( i in trial_sizes) {
rolls <- vector(length = trial_sizes[i], mode='double')
for(j in 1:trial_sizes[i])
{ rolls[j] <- sample(1:6,1)}
means[i] <- mean(rolls);
}
plot(log10(trialSizes), mean)
plot(log10(trialSizes), means)
ls
setwd("~/")
data <- read.table('Umotif_Interaction_Score.txt', sep='\t')
data
cor(data$V3)
cor(data)
library('subread')
library(subread)
a <- c(1, 2, 3)
a[3] <- NULL
rolls <- roll_die(num_rolls) {}
rolls <- roll_die(num_rolls) {}
rolls <- roll_die(num_rolls) {
rolls <- roll_die(num_rolls) {
rolls <- roll_die(num_rolls) {
rolls <- roll_die(num_rolls) { \
rolls <- roll_die(num_rolls) {
print('Hello')
?rep
sample
?vector
?sample
}
rolls <- function(num_rolls) {
die <- c(1, 2, 3, 4, 5, rep(6, 5))
return(sample(die, size=num_rolls, replace=F))
}
rolls(100-)
rolls(100)
rolls <- function(num_rolls) {
die <- c(1, 2, 3, 4, 5, rep(6, 5))
return(sample(die, size=num_rolls, replace=T))
}
roll(100)
rolls(100)
rolls(10000)
hist(rolls(10000))
?hist
hist(rolls(10000), breaks=6))
hist(rolls(10000), breaks=6)
hist(rolls(10000), breaks=6)
hist(rolls(10000))
?var
?mean
hist(rolls(10000))
?hist
}
hist(rolls(10000), breaks=6)
hist(rolls(10000), breaks=7)
?hist
hist(rolls(10000), xlim=c(1,6))
hist(rolls(10000), xlim=c(0,6))
?hist
data.frame((rolls(10000)))
ggplot(dataframe(rolls(10000)), aes(x=$V1)) + geom_histogram()
ggplot(dataframe(rolls(10000)), aes(x=V1)) + geom_histogram()
library(ggplot2)
ggplot(dataframe(rolls(10000)), aes(x=V1)) + geom_histogram()
ggplot(dataframe, (rolls(10000)), aes(x=V1)) + geom_histogram()
ggplot(dataframe(rolls), (rolls(10000)), aes(x=V1)) + geom_histogram()
ggplot(data.frame(rolls), (rolls(10000)), aes(x=V1)) + geom_histogram()
ggplot(data.frame(rolls(100)), aes(x=V1)) + geom_histogram()
ggplot(df, aes()) + geom_histogram()
print(df)
df
df <- data.frame(rolls(10000))
ggplot(data=df, aes(x=$V1)) + geom_histogram()
data.frame(rolls(10000))
data.frame(rolls(100))
mean(values)
rolls <- function(num_rolls) {
die <- c(1, 2, 3, 4, 5, rep(6, 5))
return(sample(die, size=num_rolls, replace=T))
}
df <- data.frame(rolls(10000))
names(df) <- 'rolls'
ggplot(data=df, aes(x=$rolls)) + geom_histogram()
ggplot(data=df, aes(x=df$rolls)) + geom_histogram()
ggplot(data=df, aes(x=rolls)) + geom_histogram()
names(df) <- 'Rolls'
source("~/.active-rstudio-document")
ggplot(data=df, aes(x=Rolls)) + geom_histogram() + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram(binwidth=1) + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram(binwidth=2) + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram(binwidth=30) + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram() + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram(bins=x) + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram(bins=Rolls) + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram() + ylab('Count')
df <- data.frame(rolls(10000))
ggplot(data=df, aes(x=Rolls)) + geom_bar() + ylab('Count')
}
ggplot(data=df, aes(x=Rolls)) + geom_histogram() + ylab('Count')
ggplot(data=df, aes(x=Rolls)) + geom_histogram() + ylab('Count')
names(df) <- 'Rolls'
ggplot(data=df, aes(x=Rolls)) + geom_histogram() + ylab('Count')
??odds
dbinom
?dbinom
mutation_freq = 1/3
dbinom(x=12, size=30, prob=mutation_freq)
library(knitr)
?kable
?weighted.mean
x <- 1:10
x
dbinom
?pbinom
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
missing_data
nrow(missing_data)
nrow(clinical)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
#get records that have days to death -- the target of our classifier
filtered <- clinical %>%
filter(., !is.na(days_to_death)) %>%
select_if(~sum(!is.na(.)) > 0)
nrows(filtered)
nrow(filtered)
rcol(filtered)
ncol(filtered)
names(filtered)
filtered[,3:]
filtered[:,3:]
filtered[:,3:]
filtered[:]
filtered[1,1]
filtered[1:1]
filtered[1:]
filtered[,4:]
filtered[,4:5]
filtered[,4:ncol(filtered)]
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
filtered <- filtered[,4:ncol(filtered)]
filtered[,4:ncol(filtered)]
names filtered
names(filtered)
View(filtered)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
install('ggpubr')
install.packages('ggpubr')
install.packages('statix')
install.packages('rstatix')
install.packages('broom')
filtered
?scale
?data.frame
?group
?groups
cov_lin_plot[:,1]
cov_lin_plot[,1]
cov_lin_plot[,1:]
cov_lin_plot[,1:1]
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
filtered$year_of_birth <- scale(filtered$year_of_birth)
filtered
cov_lin_plt
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
filtered$days_to_treatment_start <- scale(filtered$days_to_treatment_start)
View(filtered)
cov_lin_plot <- data.frame(filtered$year_of_birth, filtered$year_of_death, filtered$age_at_diagnosis,
filtered$days_to_last_follow_up, filtered$days_to_last_known_disease_status,
filtered$days_to_recurrence, filtered$days_to_treatment_start)
View(cov_lin_plot)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=year_of_birth, y=days_to_diagnosis)) + geom_scatter()
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
#---- checking linearity assumption ----
cov_lin_plot <- data.frame(filtered$days_to_death,
filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$days_to_recurrence,
filtered$days_to_treatment_start)
ggplot(cov_lin_plot, aes(x=year_of_birth, y=days_to_diagnosis)) + geom_point()
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(filtered, aes(x=year_of_birth, y=days_to_diagnosis)) + geom_point()
filtered
filtered
ggplot(filtered, aes(x=year_of_birth, y=days_to_diagnosis)) + geom_point()
ggplot(filtered, aes(x=year_of_birth, y=days_to_death)) + geom_point()
ggplot(filtered, aes(x=year_of_birth, y=days_to_death)) + geom_point(slpha=0.5)
ggplot(filtered, aes(x=year_of_birth, y=days_to_death)) + geom_point(alpha=0.5)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(filtered, aes(x=age_at_diagnosis, y=days_to_diagnosis)) + geom_point()
ggplot(filtered, aes(x=age_at_diagnosis, y=days_to_death)) + geom_point(alpha=0.5)
names(cov_lin_plot)
cov_lin_plot[1]
cov_lin_plot[2]
cov_lin_plot[2]
cov_lin_plot[3]
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cov_lin_plot[1], y=cov_lin_plot[2:ncol(cov_lin_plot)], )) + geom_point(alpha=0.5)
cov_lin_plot(names)
names(cov_lin_plot)
a <- ('c')
a * 3
a <- ('f', 'g')
a <- c('f', 'g')
?rep
ggplot(cov_lin_plot, aes(x=cv, y=target, color=group) + geom_point(alpha=0.5))
ggplot(cov_lin_plot, aes(x=cv, y=target, color=group)) + geom_point(alpha=0.5))
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=group)) + geom_point(alpha=0.5)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
cov_lin_plot <- data.frame(c(rep("year of birth", 845),
rep("age at index", 845),
rep("year_of_death", 845),
rep("age_at_diagnosis", 845),
rep("days_to_last_follow_up", 845),
rep("days_to_diagnosis", 845),
rep("days_to_last_known_disease_status", 845),
rep("year_of_diagnosis", 845),
rep("days_to_last_known_disease_status", 845),
rep("days_to_recurrence", 845),
rep("days_to_treatment_start", 845)),
rep(target, 8),
c(filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_recurrence,
filtered$days_to_treatment_start))
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
cov_lin_plot <- data.frame(c(rep("year of birth", 845),
rep("age at index", 845),
rep("year_of_death", 845),
rep("age_at_diagnosis", 845),
rep("days_to_last_follow_up", 845),
rep("days_to_diagnosis", 845),
rep("days_to_last_known_disease_status", 845),
rep("year_of_diagnosis", 845),
rep("days_to_last_known_disease_status", 845),
rep("days_to_recurrence", 845),
rep("days_to_treatment_start", 845)),
rep(filtered$days_to_death, 8),
c(filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_recurrence,
filtered$days_to_treatment_start))
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
?C
?c
c(filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_recurrence,
filtered$days_to_treatment_start))
c(filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_recurrence,
filtered$days_to_treatment_start)
rep(filtered$days_to_death, 8)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
cov_lin_plot <- data.frame(c(rep("year of birth", 845),
rep("age at index", 845),
rep("year_of_death", 845),
rep("age_at_diagnosis", 845),
rep("days_to_last_follow_up", 845),
rep("days_to_diagnosis", 845),
rep("days_to_last_known_disease_status", 845),
rep("year_of_diagnosis", 845),
rep("days_to_recurrence", 845),
rep("days_to_treatment_start", 845)),
rep(filtered$days_to_death, 10),
c(filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_recurrence,
filtered$days_to_treatment_start))
ggplot(cov_lin_plot, aes(x=cv, y=target, color=group)) + geom_point(alpha=0.5)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=group)) + geom_point(alpha=0.5)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.5)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
cov_lin_plot <- data.frame(c(rep("year of birth", 845),
rep("age at index", 845),
rep("year_of_death", 845),
rep("age_at_diagnosis", 845),
rep("days_to_last_follow_up", 845),
rep("days_to_diagnosis", 845),
rep("days_to_last_known_disease_status", 845),
rep("year_of_diagnosis", 845),
rep("days_to_recurrence", 845),
rep("days_to_treatment_start", 845)),
rep(filtered$days_to_death, 10),
c(filtered$year_of_birth,
filtered$age_at_index,
filtered$year_of_death,
filtered$age_at_diagnosis,
filtered$days_to_last_follow_up,
filtered$days_to_diagnosis,
filtered$days_to_last_known_disease_status,
filtered$year_of_diagnosis,
filtered$days_to_recurrence,
filtered$days_to_treatment_start))
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
names(cov_lin_plot) <- c('groups', 'target', 'cv')
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
filtered$days_to_recurrence <- scale(as.numeric(filtered$days_to_recurrence))
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.7)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.7) + facet_wrap(groups)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.7)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.2)
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.2) + facet_wrap(~group)
source("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/Untitled.R")
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.2) + facet_wrap(~groups)
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.2) + facet_wrap(~groups) + geom_abline()
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.2) + facet_wrap(~groups) + geom_smooth()
ggplot(cov_lin_plot, aes(x=cv, y=target, color=groups)) + geom_point(alpha=0.2) + facet_wrap(~groups) + geom_smooth(method='lm')
plot(target)
plot(target, 'h')
plot(seq(1:length(target),target)
)
hist(target)
qqnorm(target)
qq(lin)
qq(line)
qqline(target)
library("devtools")
install.packages('devtools')
install_github("PhanstielLab/Sushi")
source("http://bioconductor.org/biocLite.R")
biocLite("Sushi")
BiocManager::install("Sushi")
library(sushi)
library('sushi')
library(Sushi)
source("~/.active-rstudio-document")
head(TOTAL_KEEP_BINDING_SITES_Norm.bed)
head('TOTAL_KEEP_BINDING_SITES_Norm.bed')
source("~/.active-rstudio-document")
head('TOTAL_KEEP_BINDING_SITES_Norm.bed')
BiocManager::install("BayesPeak")
install.packages(BayesPeak)
install.packages('BayesPeak')
bed <- read.table('TOTAL_KEEP_BINDING_SITES_Norm.bed')
plotBed(bed)
head(bed)
plotBed(bed, chrom = chrom, start = start, stop = stop())
plotBed(bed, chrom = chrom, start = start, stop = stop)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
data
head(data)
plot(D2_01)
plot(data$D2_01)
hist(data$D2_01)
plot_data <- plot(data$D2_01, plot=F)
plot_data <- hist(data$D2_01, plot=F)
plot_data <- hist(data$D2_01, plot=F)
plot_data$counts
plot_data$breaks
hist(log10(data))
plot(log10(data), log10(data))
plot(log10(data))
plot(log10(data))
hist(log10(data))
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
plot_data <- hist(data$D2_02, plot=F)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
plot_data <- hist(data$D2_02, plot=F)
plot_data
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
plot(log10(data$D2_01), log10(data$D2_02))
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
#ggplot(to_plot, aes)
to_plot
head(to_plot)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
names(to_plot) <- c("D1", "D2")
ggplot(to_plot, aes(x=D1, y=D2)) + geom_point(alpha=0.4)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
names(to_plot) <- c("D1", "D2")
ggplot(to_plot, aes(x=D1, y=D2)) + geom_point(alpha=0.4) + xlab("Log10(Replicate 1)") + ylab("Log10(Replicate 2)") + theme(text= element_text(size=20), axis.title.x=element_text(face="bold"),  axis.title.y=element_text(face="bold"), aspect.ratio=1)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
names(to_plot) <- c("D1", "D2")
ggplot(to_plot, aes(x=D1, y=D2)) + geom_point(alpha=0.4) + xlab("Log10(Replicate 1)") + ylab("Log10(Replicate 2)") + theme(text= element_text(size=14), axis.title.x=element_text(face="bold"),  axis.title.y=element_text(face="bold")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
names(to_plot) <- c("D1", "D2")
ggplot(to_plot, aes(x=D1, y=D2)) + geom_point(alpha=0.4) + xlab("Log10(Replicate 1)") + ylab("Log10(Replicate 2)") + theme(text= element_text(size=14), axis.title.x=element_text(face="bold"),  axis.title.y=element_text(face="bold"))
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
names(to_plot) <- c("D1", "D2")
ggplot(to_plot, aes(x=D1, y=D2)) + geom_point(alpha=0.4) + xlab("Log10(Replicate 1)") + ylab("Log10(Replicate 2)") + theme(text= element_text(size=14), axis.title.x=element_text(face="bold"),  axis.title.y=element_text(face="bold"))
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
to_plot <- data.frame(log10(data$D2_01), log10(data$D2_02))
names(to_plot) <- c("D1", "D2")
ggplot(to_plot, aes(x=D1, y=D2)) + geom_point(alpha=0.4) + xlab("Log10(Replicate 1)") + ylab("Log10(Replicate 2)") + theme(text= element_text(size=14), axis.title.x=element_text(face="bold"),  axis.title.y=element_text(face="bold"))
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
setwd("/Volumes/GoogleDrive/My Drive/spring2022/adv_stats/BINF8310/Lab4/longitdunalRNASeqData")
data <- read.table("nc101_scaff_dataCounts.txt",header=TRUE,row.names=1)
